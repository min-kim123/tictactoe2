/*
  Author: Min Kim
  Date: 10/4/22
  Program description: This program is a game of tictactoe. It will keep track of who won each game. 
*/
#include <iostream>
#include <iomanip>
#include <cstring>
using namespace std;

void printBoard(int (&board)[3][3], int X_MOVE, int O_MOVE, int BLANK){//print board and x and os
  cout << "---------------------" << endl;
  cout << "\t1\t2\t3" << endl;
  for (int row = 0; row < 3; row++) {
    char c = (char)97 + row;
    cout << c << "\t";
    for (int column = 0; column < 3; column++) {
      if (board[row][column] == 0) {
        cout << "\t";
      } 
      else if (board[row][column] == 1) {
        cout << "X\t";
      } 
      else if (board[row][column] == 2) {
        cout << "O\t";
      }
    }
    cout << endl;
  }
  cout << "---------------------" << endl;
  cout << endl;
}
bool checkTie(int board[3][3], int BLANK) {//check ties
		for (int row = 0; row < 3; row++) {
			for (int column = 0; column < 3; column++) {
				if (board[row][column] == BLANK) {
					return false;
				}
			}
		}
		return true;
}

bool checkWin(int board[3][3], int player) {//check win
  // 8 possibilities of winning
	//ROW 0,1,2
  if (board[0][0] == player && board[0][1] == player && board[0][2] == player) {
    return true;
  }
  if (board[1][0] == player && board[1][1] == player && board[1][2] == player) {
    return true;
  }
  if (board[2][0] == player && board[2][1] == player && board[2][2] == player) {
    return true;
  }
  //COLUMN 0,1,2
  if (board[0][0] == player && board[1][0] == player && board[2][0] == player) {
    return true;
  }
  if (board[0][1] == player && board[1][1] == player && board[2][1] == player) {
    return true;
  }
  if (board[0][2] == player && board[1][2] == player && board[2][2]== player) {
    return true;
  }
  //DIAGONAL
  if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
    return true;
  }
  if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
    return true;
  }
  return false;
}

int main() {
	int board[3][3];
	int BLANK = 0;
	int X_MOVE = 1;
	int O_MOVE = 2;
	int X_TURN = 0;
	int O_TURN = 1;
	int turn = X_TURN;
	int xwin = 0;
	int owin = 0;
  char input[3];
  
  bool stillplaying = true;
  char playagain;
  for (int i = 0; i < 3; ++i) {
    for (int j = 0; j < 3; ++j) {
      board[i][j] = 0;
    }
  }
  while (stillplaying == true) {
    turn = X_TURN;
    while(checkWin(board, X_MOVE) == false && checkWin(board, O_MOVE) == false && checkTie(board, BLANK) == false) {
      printBoard(board, X_MOVE, O_MOVE, BLANK);

      cin.get(input, 3);
      cin.get();
      
      //INCORRECT INPUT
      //INPUT IS NOT A LENGTH OF 2
      if (strlen(input) != 2) {
        cout << "Enter a letter followed by a number" << endl;
      
      }
      //ROW DOES NOT EXIST
      else if (input[0] != 'a' &&
           input[0] != 'b' &&
           input[0] != 'c') {
        cout << "Row must be an a, b, or c." << endl;
      }
      //COLUMN DOES NOT EXIST
      else if (input[1] != '1' &&
           input[1] != '2'&&
           input[1] != '3') {
        cout << "Column must be a 1, 2, or 3." << endl;
      }
      
      //CORRECT INPUT
      else {
        int row = input[0] - 'a';
        int column = input[1] - '1';
        
        //CHECK IF SPOT IS BLANK
        if (board[row][column] == BLANK) {
          if (turn == X_TURN) {
            board[row][column] = X_MOVE;
            turn = O_TURN;
          }
          else {
            board[row][column] = O_MOVE;
            turn = X_TURN;
          }
        }
          //SPOT IS NOT BLANK
        else {
          cout << "There is a piece there!" << endl;
        }
        
      }
    }
    if (checkWin(board, X_MOVE) == true) {//check win for x and works
      cout << "X wins!";
      xwin+=1;
      cout << "X won " << xwin << " times" << endl;
      cout << "O won " << owin << " times"<< endl;
    }
    else if (checkWin(board, O_MOVE) == true) {//check win for o and works
      cout << "O wins!" << endl;
      owin+=1;
      cout << "X won " << xwin << " times" << endl;
      cout << "O won " << owin << " times" << endl;
    }
    else {//no check wins work
      cout << "Tie!" << endl;
    }
    cout << "Do you want to play again? (y/n)";
    
    cin.get(playagain);
    cin.get();
//ask user to play again
    if (playagain == 'y') {
      stillplaying = true;
    }
    else {
      stillplaying = false;
    }

    //clearing the board 
    for (int row = 0; row < 3; row++) {
      for (int column = 0; column < 3; column++) {
        board[row][column] = BLANK; 
      }
    }
    
    
    
  }
}

